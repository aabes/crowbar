# Kickstart file automatically generated by anaconda.

install
url --url http://<%= @admin_node_ip %>:<%= @web_port %>/redhat_dvd
key --skip
lang en_US.UTF-8
keyboard us
# crowbar
rootpw --iscrypted $1$H6F/NLec$Fps2Ut0zY4MjJtsa1O2yk0
firewall --disabled
authconfig --enableshadow --enablemd5
selinux --disabled
timezone --utc Europe/London
bootloader --location=mbr --driveorder=sda --append="rhgb quiet"
zerombr yes
clearpart --all --drives=sda
part /boot --fstype ext3 --size=100 --ondisk=sda
part pv.6 --size=0 --grow --ondisk=sda
volgroup lv_admin --pesize=32768 pv.6
logvol / --fstype ext3 --name=lv_root --vgname=lv_admin --size=1 --grow
text
reboot

%packages
@base
@core
@editors
@text-internet
keyutils
trousers
fipscheck
device-mapper-multipath
OpenIPMI
OpenIPMI-tools
emacs-nox
openssh
curl
ntp

%post

exec > /root/post-install.log 2>&1
set -x 
export PS4='${BASH_SOURCE}@${LINENO}(${FUNCNAME[0]}): '
(cd /etc/yum.repos.d && rm *)

cat >/etc/yum.repos.d/RHEL5.6-Base.repo <<EOF
[RHEL56-Base]
name=RHEL 5.6 Server
baseurl=http://<%= @admin_node_ip %>:<%= @web_port %>/redhat_dvd/Server
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
EOF

cat >/etc/yum.repos.d/crowbar-xtras.repo <<EOF
[crowbar-xtras]
name=Crowbar Extra Packages
baseurl=http://<%= @admin_node_ip %>:<%= @web_port %>/redhat_dvd/extra/pkgs
gpgcheck=0
EOF

HTTP_SERVER="<%= @admin_node_ip %>:<%= @web_port %>"
IP=${HTTP_SERVER%%:*}
HOSTNAME=$(hostname -f)

key_re='crowbar\.install\.key=([^ ]+)'
if [[ $(cat /proc/cmdline) =~ $key_re ]]; then
    export CROWBAR_KEY="${BASH_REMATCH[1]}"
    echo "$CROWBAR_KEY" >/etc/crowbar.install.key
elif [[ -f /etc/crowbar.install.key ]]; then
    export CROWBAR_KEY="$(cat /etc/crowbar.install.key)"
fi

post_state() {
  local curlargs=(-o "/var/log/$1-$2.json" --connect-timeout 60 -s \
      -L -X POST --data-binary "{ \"name\": \"$1\", \"state\": \"$2\" }" \
      -H "Accept: application/json" -H "Content-Type: application/json" \
      --max-time 240)
  [[ $CROWBAR_KEY ]] && curlargs+=(-u "$CROWBAR_KEY" --digest --anyauth)
  curl "${curlargs[@]}" "http://$IP:3000/crowbar/crowbar/1.0/transition/default"
}

post_state $HOSTNAME "installing"

rsyslog_dir="/etc/rsyslog.d"
mkdir -p "$rsyslog_dir"
if [ ! -f "$rsyslog_dir/10-crowbar-client.conf" ]; then
    echo "*.* @@${IP}" > "$rsyslog_dir/10-crowbar-client.conf"
    if ! curl -s -o "$rsyslog_dir/00-crowbar-debug.conf" \
	http://$HTTP_SERVER/redhat_dvd/rsyslog.d/00-crowbar-debug.conf
    then
	rm -f "$rsyslog_dir/00-crowbar-debug.conf"
    fi
fi

mkdir -p /root/.ssh
chmod 700 /root/.ssh
if ! curl -s -o /root/.ssh/authorized_keys.wget \
    http://$HTTP_SERVER/redhat_dvd/authorized_keys; then
    rm -f /root/.ssh/authorized_keys.wget
else
    chmod 644 /root/.ssh/authorized_keys
    cat /root/.ssh/authorized_keys.wget >>/root/.ssh/authorized_keys
    rm -f /root/.ssh/authorized_keys.wget
fi

curl -s -o /etc/init.d/crowbar_join.sh \
    http://$HTTP_SERVER/redhat_dvd/redhat_install/crowbar_join.sh
chmod +x /etc/init.d/crowbar_join.sh
ln -s /etc/init.d/crowbar_join.sh /etc/rc3.d/S80crowbar
ln -s /etc/init.d/crowbar_join.sh /etc/rc5.d/S80crowbar
ln -s /etc/init.d/crowbar_join.sh /etc/rc2.d/S80crowbar

# boot to runlevel 3 by default
sed -i -e '/initdefault/ s/5/3/' /etc/inittab

sleep 30

post_state $HOSTNAME "installed"

# Wait for DHCP to update - this is mainly for virtual environments or really large deploys
sleep 30
sync
